platform: linux
image_resource:
  type: registry-image
  source:
    repository: concourse/concourse-pipeline-resource
    tag: dev
  version:
    digest: sha256:cd899511e06c3027dc8429f4b38ba8ea32a4c0bea044f4711899d5987abf8fdf
inputs:
- name: tech-ops-private
outputs:
- name: roll-instances-pipeline
params:
  DEPLOYMENT_NAME:
  CONCOURSE_USERNAME:
  CONCOURSE_PASSWORD:
run:
  path: /bin/bash
  args:
  - -euo
  - pipefail
  - -c
  - |
    apk update && apk add jq
    mkdir -p roll-instances-pipeline
    export PATH="$PATH:/opt/resource"
    fly -t concourse login -c "https://${DEPLOYMENT_NAME}.gds-reliability.engineering" -u $CONCOURSE_USERNAME -p $CONCOURSE_PASSWORD -n $CONCOURSE_USERNAME
    fly -t concourse sync
    jq -s '.[0] * .[1]' \
      <(fly -t concourse teams --json \
        | jq "[.[] | {team: .name, workers: 1, deployment: \"${DEPLOYMENT_NAME}\"}]" \
        | jq 'map( {(.team): .} ) | add' \
      ) \
      <(fly -t concourse workers --json \
        | jq '[group_by (.team)[] | {"team": (.[0].team), "workers": (. | length)}]' \
        | jq 'map( {(.team): .} ) | add' \
      ) | jq 'to_entries | map_values(.value) | {
      "resources": [
        {
          "name": "every-weekday-morning",
          "type": "time",
          "source": {
            "location": "Europe/London",
            "start": "00:00 AM",
            "stop": "01:00 AM",
            "days": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday"
            ]
          }
        },
        {
          "name": "awsc-image",
          "type": "docker-image",
          "source": {
            "repository": "govsvc/awsc"
          }
        }
      ],
      "jobs": [.[] | select (.team != "main") | {
        "name": ("roll-" + .team + "-concourse-workers"),
        "serial": true,
        "plan": [
          {
            "in_parallel": [
              {
                "get": "every-weekday-morning",
                "trigger": true
              },
              {
                "get": "awsc-image"
              }
            ]
          },
          {
            "task": "roll-instances",
            "image": "awsc-image",
            "config": {
              "platform": "linux",
              "params": {
                "TEAM": .team,
                "DEPLOYMENT_NAME": .deployment,
                "MINIMUM_HEALTHY": (if (100 / .workers) == 100 then 0 else (100 / .workers) end)
              },
              "run": {
                "path": "sh",
                "args": [
                  "-c",
                  "set -ue; AWS_REGION=eu-west-2 awsc autoscaling migrate $DEPLOYMENT_NAME-$TEAM-concourse-worker -m $MINIMUM_HEALTHY"
                ]
              }
            }
          }
        ]
      }]
    }' > roll-instances-pipeline/roll-instances.json
